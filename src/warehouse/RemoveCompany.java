/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package warehouse;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author magic
 */
public class RemoveCompany extends javax.swing.JFrame {

   
    public RemoveCompany() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPanel = new javax.swing.JPanel();
        lblSearchWith = new javax.swing.JLabel();
        columnBox = new javax.swing.JComboBox();
        lblValue = new javax.swing.JLabel();
        txtData = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("DeletingCompany");

        lblSearchWith.setText("Search with");

        columnBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "companyID", "companyName", "location", "fax", "phoneNumber", "CEOName" }));
        columnBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                columnBoxActionPerformed(evt);
            }
        });

        lblValue.setText("Value");

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete Selected Item");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear Table");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "companyID", "companyName", "location", "fax", "phoneNumber", "CEOName"
            }
        ));
        jScrollPane2.setViewportView(table);

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(lblSearchWith)
                .addGap(42, 42, 42)
                .addComponent(columnBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(lblValue, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deleteButton)
                .addGap(41, 41, 41)
                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearchWith, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(columnBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblValue, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton)
                    .addComponent(backButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton)
                    .addComponent(clearButton))
                .addGap(179, 179, 179))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void columnBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_columnBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_columnBoxActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
      if (columnBox.getSelectedItem().toString().equals("companyID")){
      if (txtData.getText().toString().equals(""))
      {
          JOptionPane.showMessageDialog(null, "Enter company ID");
       return;
      }
      if (!Controller.validateIntegerNumber(txtData.getText().toString()))
      {
      JOptionPane.showMessageDialog(null, "Company ID not valid");
        return; 
      }
      try {
      Connection conn = ConnectDataBase.connect();
          PreparedStatement ps = conn.prepareStatement("select * from company where companyID = ?");
          ps.setString(1, txtData.getText().toString());
          ResultSet rs = ps.executeQuery();
          table.setModel(DbUtils.resultSetToTableModel(rs));
      
      }
      catch (Exception ex){JOptionPane.showMessageDialog(null, ex.getMessage());}
      
      
      
      } else  if (columnBox.getSelectedItem().toString().equals("companyName")){
      if (txtData.getText().toString().equals(""))
      {
          JOptionPane.showMessageDialog(null, "Enter company name");
       return;
      }
      if (!Controller.validateName(txtData.getText().toString()))
      {
      JOptionPane.showMessageDialog(null, "Company name not valid");
        return; 
      }
      try {
      Connection conn = ConnectDataBase.connect();
          PreparedStatement ps = conn.prepareStatement("select * from company where companyName = ?");
          ps.setString(1, txtData.getText().toString());
          ResultSet rs = ps.executeQuery();
          table.setModel(DbUtils.resultSetToTableModel(rs));
      
      } 
      catch (Exception ex){JOptionPane.showMessageDialog(null, ex.getMessage());}
      }
      else  if (columnBox.getSelectedItem().toString().equals("location")){
      if (txtData.getText().toString().equals(""))
      {
          JOptionPane.showMessageDialog(null, "Enter company location");
       return;
      }
      try {
      Connection conn = ConnectDataBase.connect();
          PreparedStatement ps = conn.prepareStatement("select * from company where location = ?");
          ps.setString(1, txtData.getText().toString());
          ResultSet rs = ps.executeQuery();
          table.setModel(DbUtils.resultSetToTableModel(rs));
      
      } 
      catch (Exception ex){JOptionPane.showMessageDialog(null, ex.getMessage());}
      }
      else  if (columnBox.getSelectedItem().toString().equals("fax")){
      if (txtData.getText().toString().equals(""))
      {
          JOptionPane.showMessageDialog(null, "Enter company fax");
       return;
      }
      if (!Controller.validateIntegerNumber(txtData.getText().toString()))
      {
      JOptionPane.showMessageDialog(null, "Company fax not valid");
        return; 
      }
      try {
      Connection conn = ConnectDataBase.connect();
          PreparedStatement ps = conn.prepareStatement("select * from company where fax = ?");
          ps.setString(1, txtData.getText().toString());
          ResultSet rs = ps.executeQuery();
          table.setModel(DbUtils.resultSetToTableModel(rs));
      
      } 
      catch (Exception ex){JOptionPane.showMessageDialog(null, ex.getMessage());}
      }
      else  if (columnBox.getSelectedItem().toString().equals("phoneNumber")){
      if (txtData.getText().toString().equals(""))
      {
          JOptionPane.showMessageDialog(null, "Enter company phone number");
       return;
      }
      if (!Controller.validateIntegerNumber(txtData.getText().toString()))
      {
      JOptionPane.showMessageDialog(null, "Company phone number not valid");
        return; 
      }
      try {
      Connection conn = ConnectDataBase.connect();
          PreparedStatement ps = conn.prepareStatement("select * from company where phoneNumber = ?");
          ps.setString(1, txtData.getText().toString());
          ResultSet rs = ps.executeQuery();
          table.setModel(DbUtils.resultSetToTableModel(rs));
      
      } 
   
      catch (Exception ex){JOptionPane.showMessageDialog(null, ex.getMessage());}
      }
      else  if (columnBox.getSelectedItem().toString().equals("CEOName")){
      if (txtData.getText().toString().equals(""))
      {
          JOptionPane.showMessageDialog(null, "Enter CEO name");
       return;
      }
      if (!Controller.validateName(txtData.getText().toString()))
      {
      JOptionPane.showMessageDialog(null, "CEO name not valid");
        return; 
      }
      try {
      Connection conn = ConnectDataBase.connect();
          PreparedStatement ps = conn.prepareStatement("select * from company where CEOName = ?");
          ps.setString(1, txtData.getText().toString());
          ResultSet rs = ps.executeQuery();
          table.setModel(DbUtils.resultSetToTableModel(rs));
      
      } 
      catch (Exception ex){JOptionPane.showMessageDialog(null, ex.getMessage());}
      }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
 int x ;
 String ID ;
 try {
 x = table.getSelectedRow();
 ID = table.getValueAt(x, 0).toString();
 }
 catch (Exception ex)
 {JOptionPane.showMessageDialog(null , "No selected company"); return;}
   int check = JOptionPane.showConfirmDialog(null, "Do you really want to Delete this item ?");
      if (check == 0){
 try {
 Connection conn = ConnectDataBase.connect();
   PreparedStatement ps = conn.prepareStatement("delete from company where companyID = ?");
   ps.setString(1, ID);
   ps.execute();
   int modelIndex = table.convertRowIndexToModel(x);
     DefaultTableModel model = (DefaultTableModel)table.getModel();
     model.removeRow(modelIndex);
 
 }
 catch (Exception ex){
 JOptionPane.showMessageDialog(null, ex.getMessage());
 }}
      else {
      return;
      }
      
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
   table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "companyID", "companyName", "location", "fax", "phoneNumber", "CEOName"
            }
        ));    
    }//GEN-LAST:event_clearButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RemoveCompany.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RemoveCompany.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RemoveCompany.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RemoveCompany.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RemoveCompany().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MainPanel;
    private javax.swing.JButton backButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JComboBox columnBox;
    private javax.swing.JButton deleteButton;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblSearchWith;
    private javax.swing.JLabel lblValue;
    private javax.swing.JButton searchButton;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtData;
    // End of variables declaration//GEN-END:variables
}
